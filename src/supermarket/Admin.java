/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;
//Remember to add that

import javax.swing.table.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import net.proteanit.sql.DbUtils;
import static supermarket.Penjualan.isNumeric;

/**
 *
 * @author Group1
 */
public class Admin extends javax.swing.JFrame {
     koneksi conn = new koneksi();
       Produk scl = new Produk();
       Seller sl = new Seller();
       ResultSet Rs = null;
       
    /**
     * Creates new form NewJFrame
     */
    public Admin() {
        initComponents();
        hidee();
       SelectCat();
       Th();
       Selectseller();
       SelectProd();
       SelectHistory();
       Connection con = null;
      Statement stm = null;
    }
     public void Selectseller() {
      try {
         conn.getKoneksi1();
         Rs = conn.stm.executeQuery("Select * from TABSELLER");
         SellerTabel.setModel(DbUtils.resultSetToTableModel(Rs));
      } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Gagal memuat tabel");
      }

   }
    
   public void SelectProd() {
      
      try {
         conn.getKoneksi1();
         Rs = conn.stm.executeQuery("Select * from TABPROD");
         ProdTabel.setModel(DbUtils.resultSetToTableModel(Rs));
      } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Gagal memuat tabel");
      }

   }
   public void SelectHistory() {
      try {
         conn.getKoneksi1();
         Rs = conn.stm.executeQuery("Select * from history");
         History.setModel(DbUtils.resultSetToTableModel(Rs));
      } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat tabel");
      }

   }
   
   public void SelectCat() {
      
      try {
         conn.getKoneksi1();
         Rs = conn.stm.executeQuery("Select * from Kategori");
         while(Rs.next()){
         Cat.addItem(Rs.getString("Cat"));
         }
         
         
      } catch (Exception e) {
         JOptionPane.showMessageDialog(null, "Gagal memuat data");
      }

   }
   void hidee(){
        if(bAdd.getText().equals("+")){
        JAddcat.setVisible(false);
        add.setVisible(false);
        Del.setVisible(false);
        }else{
          JAddcat.setVisible(true);
          add.setVisible(true);
          Del.setVisible(true); 
        }
       
    }
   public void Th(){
       try {
         conn.getKoneksi1();
         Rs = conn.stm.executeQuery("Select SUM(Harga) AS total from history");
         if(Rs.next()){
             double total = Rs.getDouble("total");
             Jtotal.setText(Double.toString(total));
         }
      } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat data");
      }
   }

   public void Clear() {
      IdProd.setText("");
      ProdNama.setText("");
      Stok.setText("");
      Harga.setText("");
      Cat.setSelectedItem("");
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ad2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        IdProd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ProdNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Hapus = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProdTabel = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        Edit = new javax.swing.JButton();
        Tambah = new javax.swing.JButton();
        Stok = new javax.swing.JTextField();
        Harga = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Log1 = new javax.swing.JButton();
        Cat = new javax.swing.JComboBox<>();
        JAddcat = new javax.swing.JTextField();
        bAdd = new javax.swing.JButton();
        add = new javax.swing.JButton();
        Del = new javax.swing.JButton();
        Filter = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        SID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        SNama = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        SPass = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        SGender = new javax.swing.JComboBox<>();
        SellerAdd = new javax.swing.JButton();
        SellerUpdate = new javax.swing.JButton();
        SellerDelete = new javax.swing.JButton();
        SellerClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SellerTabel = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        Log = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        History = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        Log2 = new javax.swing.JButton();
        Jtotal = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();

        ad2.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        ad2.setText("+");
        ad2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ad2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ad2MousePressed(evt);
            }
        });
        ad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ad2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flazz Market");

        jPanel1.setBackground(new java.awt.Color(124, 214, 164));

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setText("KELOLA PRODUK");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setText("ID PRODUK");

        IdProd.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        IdProd.setForeground(new java.awt.Color(0, 0, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 153));
        jLabel4.setText("NAMA");

        ProdNama.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ProdNama.setForeground(new java.awt.Color(0, 0, 255));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 153));
        jLabel5.setText("STOK");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 153));
        jLabel6.setText("HARGA");

        Hapus.setBackground(new java.awt.Color(0, 204, 0));
        Hapus.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Hapus.setForeground(new java.awt.Color(255, 255, 255));
        Hapus.setText("Delete");
        Hapus.setBorder(null);
        Hapus.setBorderPainted(false);
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        CLEAR.setBackground(new java.awt.Color(0, 204, 0));
        CLEAR.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        CLEAR.setForeground(new java.awt.Color(255, 255, 255));
        CLEAR.setText("Clear");
        CLEAR.setBorder(null);
        CLEAR.setBorderPainted(false);
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        ProdTabel.setBackground(new java.awt.Color(204, 204, 255));
        ProdTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Price", "Quantity", "Category"
            }
        ));
        ProdTabel.setGridColor(new java.awt.Color(0, 0, 255));
        ProdTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProdTabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ProdTabel);
        if (ProdTabel.getColumnModel().getColumnCount() > 0) {
            ProdTabel.getColumnModel().getColumn(4).setHeaderValue("Category");
        }

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 153));
        jLabel8.setText("LIST PRODUK");

        Edit.setBackground(new java.awt.Color(0, 204, 0));
        Edit.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Edit.setForeground(new java.awt.Color(255, 255, 255));
        Edit.setText("Update");
        Edit.setBorder(null);
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Tambah.setBackground(new java.awt.Color(0, 204, 0));
        Tambah.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Tambah.setForeground(new java.awt.Color(255, 255, 255));
        Tambah.setText("Tambah");
        Tambah.setBorder(null);
        Tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahActionPerformed(evt);
            }
        });

        Stok.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Stok.setForeground(new java.awt.Color(0, 0, 255));
        Stok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                StokKeyTyped(evt);
            }
        });

        Harga.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Harga.setForeground(new java.awt.Color(0, 0, 255));
        Harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                HargaKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 102, 153));
        jLabel19.setText("KATEGORI");

        Log1.setBackground(new java.awt.Color(232, 29, 29));
        Log1.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        Log1.setForeground(new java.awt.Color(255, 255, 255));
        Log1.setText("Logout");
        Log1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Log1ActionPerformed(evt);
            }
        });

        Cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "coklat", "sabun", "minuman", "snack", "pasta gigi", "Shampo" }));
        Cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatActionPerformed(evt);
            }
        });

        JAddcat.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        JAddcat.setForeground(new java.awt.Color(0, 0, 255));

        bAdd.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        bAdd.setText("+");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        Del.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Del.setText("-");
        Del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelActionPerformed(evt);
            }
        });

        Filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FilterKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 102, 153));
        jLabel21.setText("Search");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(IdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(27, 27, 27)
                                                        .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(54, 54, 54)
                                                        .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(30, 30, 30)
                                                        .addComponent(ProdNama, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel19)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addGap(34, 34, 34)))
                                .addGap(38, 38, 38)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Stok)
                                    .addComponent(Harga, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                                    .addComponent(Cat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(JAddcat, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(322, 322, 322)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(Hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(68, 68, 68)
                                .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(Log1))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Del))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 756, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Log1)
                    .addComponent(jLabel3))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdProd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ProdNama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Stok, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Harga, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(Cat)
                            .addComponent(bAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JAddcat, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(add)
                    .addComponent(Del))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Kelola Produk", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 153));
        jLabel9.setText("KELOLA KASIR");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 153));
        jLabel10.setText("SELLER ID");

        SID.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SID.setForeground(new java.awt.Color(0, 0, 255));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 153));
        jLabel11.setText("NAMA");

        SNama.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SNama.setForeground(new java.awt.Color(0, 0, 255));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 153));
        jLabel12.setText("PASSWORD");

        SPass.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SPass.setForeground(new java.awt.Color(0, 0, 255));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 102, 153));
        jLabel13.setText("GENDER");

        SGender.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        SGender.setForeground(new java.awt.Color(0, 102, 153));
        SGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Laki-Laki", "Perempuan" }));

        SellerAdd.setBackground(new java.awt.Color(0, 204, 0));
        SellerAdd.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        SellerAdd.setForeground(new java.awt.Color(255, 255, 255));
        SellerAdd.setText("Tambah");
        SellerAdd.setBorder(null);
        SellerAdd.setBorderPainted(false);
        SellerAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SellerAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellerAddActionPerformed(evt);
            }
        });

        SellerUpdate.setBackground(new java.awt.Color(0, 204, 0));
        SellerUpdate.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        SellerUpdate.setForeground(new java.awt.Color(255, 255, 255));
        SellerUpdate.setText("Update");
        SellerUpdate.setBorder(null);
        SellerUpdate.setBorderPainted(false);
        SellerUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SellerUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellerUpdateActionPerformed(evt);
            }
        });

        SellerDelete.setBackground(new java.awt.Color(0, 204, 0));
        SellerDelete.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        SellerDelete.setForeground(new java.awt.Color(255, 255, 255));
        SellerDelete.setText("Delete");
        SellerDelete.setBorder(null);
        SellerDelete.setBorderPainted(false);
        SellerDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SellerDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellerDeleteActionPerformed(evt);
            }
        });

        SellerClear.setBackground(new java.awt.Color(0, 204, 0));
        SellerClear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        SellerClear.setForeground(new java.awt.Color(255, 255, 255));
        SellerClear.setText("Clear");
        SellerClear.setBorder(null);
        SellerClear.setBorderPainted(false);
        SellerClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SellerClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SellerClearActionPerformed(evt);
            }
        });

        SellerTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seller ID", "PASSWORD", "NAME", "GENDER"
            }
        ));
        SellerTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SellerTabelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(SellerTabel);

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 102, 153));
        jLabel14.setText("LIST KASIR");

        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setText("*");

        jLabel15.setForeground(new java.awt.Color(204, 0, 0));
        jLabel15.setText("*");

        jLabel16.setForeground(new java.awt.Color(204, 0, 0));
        jLabel16.setText("*");

        jLabel17.setForeground(new java.awt.Color(204, 0, 0));
        jLabel17.setText("*");

        jLabel18.setForeground(new java.awt.Color(204, 0, 0));
        jLabel18.setText("* Kolom harus di isi");

        Log.setBackground(new java.awt.Color(232, 29, 29));
        Log.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        Log.setForeground(new java.awt.Color(255, 255, 255));
        Log.setText("Logout");
        Log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(SellerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(63, 63, 63)
                                        .addComponent(SellerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel15)
                                                .addGap(51, 51, 51)))
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SNama, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(100, 100, 100)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(SellerDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(SellerClear, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(81, 81, 81)
                                                .addComponent(jLabel16))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17))
                                            .addComponent(jLabel12))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SPass, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(SGender, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(307, 307, 307)
                                .addComponent(jLabel14)))
                        .addGap(0, 47, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(310, 310, 310)
                        .addComponent(Log)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {SGender, SID, SNama, SPass});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel9)
                        .addGap(55, 55, 55)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SPass, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(SGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel1))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel16)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(SNama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel15)))
                    .addComponent(Log))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addGap(75, 75, 75)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SellerAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SellerUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SellerDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SellerClear, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {SGender, SID, SNama, SPass});

        jTabbedPane1.addTab("Kelola Kasir", jPanel3);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        History.setBackground(new java.awt.Color(204, 204, 255));
        History.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO", "Nama", "Jumlah", "Harga"
            }
        ));
        History.setGridColor(new java.awt.Color(0, 0, 255));
        jScrollPane3.setViewportView(History);

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 102, 153));
        jLabel24.setText("RIWAYAT PENJUALAN");

        Log2.setBackground(new java.awt.Color(232, 29, 29));
        Log2.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        Log2.setForeground(new java.awt.Color(255, 255, 255));
        Log2.setText("Logout");
        Log2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Log2ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Eras Bold ITC", 0, 24)); // NOI18N
        jLabel20.setText("Total Penjualan");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Log2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 761, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Jtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(306, 306, 306)
                .addComponent(jLabel24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(Log2)
                .addGap(11, 11, 11)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(Jtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hasil Penjualan", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void HargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_HargaKeyTyped

    }//GEN-LAST:event_HargaKeyTyped

    private void StokKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_StokKeyTyped

    }//GEN-LAST:event_StokKeyTyped

    private void TambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahActionPerformed
      scl.setName(ProdNama.getText());
      scl.setId(IdProd.getText());
      
      scl.setQty(Stok.getText());
      scl.setPrice(Harga.getText());
      scl.setCat(Cat.getSelectedItem().toString());
      DefaultTableModel model = (DefaultTableModel)ProdTabel.getModel();
      if (!scl.getId().isEmpty() && !scl.getName().isEmpty() && !scl.getQty().isEmpty() && !scl.getPrice().isEmpty()) {
          if(!isNumeric(IdProd.getText())){
                JOptionPane.showMessageDialog(null, "ID produk Hanya boleh angka");
            }else{
         try {
            int Quantity = Integer.parseInt(scl.getQty());
            int Pr = Integer.parseInt(scl.getPrice());
            if (Quantity <= 0 || Pr <= 0) {
               JOptionPane.showMessageDialog(this, "Hanya bisa memasukan angka positif");
               return;
            }

            for(int i = 0; i < ProdTabel.getRowCount(); ++i) {
               String Id = model.getValueAt(i, 0).toString().trim();
               if (scl.getId().equals(Id)) {
                  JOptionPane.showMessageDialog(null, "Produk ID harus unik");
                  return;
               }
            }

            PreparedStatement add = conn.con.prepareStatement("insert into TABPROD values(?,?,?,?,?)");
            add.setInt(1, Integer.valueOf(scl.getId()));
            add.setString(2, String.valueOf(scl.getName()));
            add.setString(3, String.valueOf(scl.getQty()));
            add.setInt(4, Integer.valueOf(scl.getPrice()));
            add.setString(5, String.valueOf(scl.getCat()));
            int row = add.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
            conn.con.close();
            SelectProd();
            Clear();
         } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Gagal Ditambahkan");
         }  
      }} else {
         JOptionPane.showMessageDialog(this, "Isi semua Data yang kosong");
              }
    }//GEN-LAST:event_TambahActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
      scl.setName(ProdNama.getText());
      scl.setId(IdProd.getText());
      scl.setQty(Stok.getText());
      scl.setPrice(Harga.getText());
      scl.setCat(Cat.getSelectedItem().toString());
      if (!scl.getId().isEmpty() && !scl.getName().isEmpty() && !scl.getQty().isEmpty() && !scl.getPrice().isEmpty()) {
         try {
            conn.getKoneksi2();
            String Query = "Update TABPROD set Nama='" + scl.getName() + "',Stok='" + scl.getQty() + "',Harga='" + scl.getPrice() + "',Kategori='" + scl.getCat() + "'where ID=" + IdProd.getText();
            Statement Add = conn.con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Update produk Berhasil");
            SelectProd();
         } catch (SQLException e) {
           JOptionPane.showMessageDialog(null, "Update produk gagal");
         }

         Clear();
      } else {
         JOptionPane.showMessageDialog(this, "Isi semua Data yang kosong");
      }
      
    }//GEN-LAST:event_EditActionPerformed

    private void ProdTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProdTabelMouseClicked
      DefaultTableModel model = (DefaultTableModel)ProdTabel.getModel();
      int Myindex = ProdTabel.getSelectedRow();
      IdProd.setText(model.getValueAt(Myindex, 0).toString());
      ProdNama.setText(model.getValueAt(Myindex, 1).toString());
      Stok.setText(model.getValueAt(Myindex, 2).toString());
      Harga.setText(model.getValueAt(Myindex, 3).toString());
      Cat.setSelectedItem(model.getValueAt(Myindex, 4).toString());
    }//GEN-LAST:event_ProdTabelMouseClicked

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
       Clear();

    }//GEN-LAST:event_CLEARActionPerformed

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
        if (IdProd.getText().isEmpty()) {
         JOptionPane.showMessageDialog(null, "Pilih Produk Yang Akan Di Hapus");
      } else {
         try {
            conn.getKoneksi2();
            String ProdId = IdProd.getText();
            String Query = "Delete from TABPROD where ID=" + ProdId;
            Statement Add = conn.con.createStatement();
            Add.executeUpdate(Query);
            SelectProd();
            JOptionPane.showMessageDialog(this, "Produk Berhasil Di Hapus");
         } catch (Exception e) {
           
            JOptionPane.showMessageDialog(this, "Produk Gagal Di Hapus");
         }

         IdProd.setText("");
         ProdNama.setText("");
         Harga.setText("");
         Stok.setText("");
      }

    }//GEN-LAST:event_HapusActionPerformed

    private void SellerAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellerAddActionPerformed
      sl.setId(SID.getText());
      sl.setName(SNama.getText());
      
      sl.setSPassword(SPass.getText());
      sl.setSGender(SGender.getSelectedItem().toString());
      DefaultTableModel model = (DefaultTableModel)SellerTabel.getModel();
      if (!sl.getId().isEmpty() && !sl.getName().isEmpty() && !sl.getSPassword().isEmpty() && !sl.getSGender().equals("")) {
          if(!isNumeric(SID.getText())){
                JOptionPane.showMessageDialog(null, "ID Kasir Hanya boleh angka");
            }else{
         for(int i = 0; i < SellerTabel.getRowCount(); ++i) {
            String Id = model.getValueAt(i, 0).toString().trim();
            if (sl.getId().equals(Id)) {
               JOptionPane.showMessageDialog(null, "Produk ID harus unik");
               return;
            }
         }
         try {
            PreparedStatement add = conn.con.prepareStatement("insert into TABSELLER values(?,?,?,?)");
            add.setString(1, String.valueOf(sl.getId()));
            add.setString(2, String.valueOf(sl.getName()));
            add.setString(3, String.valueOf(sl.getSPassword()));
            add.setString(4, String.valueOf(sl.getSGender()));
            int row = add.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan");
            conn.con.close();
            Selectseller();
         } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Data Gagal Ditambahkan");
         }

      }} else {
         JOptionPane.showMessageDialog(this, "Isi semua Data yang kosong");
      }
    }//GEN-LAST:event_SellerAddActionPerformed

    private void SellerUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellerUpdateActionPerformed
        sl.setId(SID.getText());
      sl.setName(SNama.getText());
      sl.setSPassword(SPass.getText());
      sl.setSGender(SGender.getSelectedItem().toString());
      if (!sl.getId().isEmpty() && !sl.getName().isEmpty() && !sl.getSPassword().isEmpty() && !sl.getSGender().equals("")) {
         try {
            conn.getKoneksi2();
            String Query = "Update TABSELLER set Nama='" + sl.getName() + "',Password='" + sl.getSPassword() + "',Gender='" + sl.getSGender() + "'where UserID=" + SID.getText();
            Statement Add = conn.con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Update kasir Berhasil");
            Selectseller();
         } catch (SQLException e) {
             e.printStackTrace();
           JOptionPane.showMessageDialog(null, "Update kasir Gagal");
         }

      } else {
         JOptionPane.showMessageDialog(this, "Isi semua Data yang kosong");
      }
    }//GEN-LAST:event_SellerUpdateActionPerformed

    private void SellerDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellerDeleteActionPerformed
        if (SID.getText().isEmpty()) {
         JOptionPane.showMessageDialog(null, "Pilih Seller Yang Akan Di Hapus");
      } else {
         try {
            PreparedStatement add = conn.con.prepareStatement("Delete from TABSELLER where UserID= ?");
            add.setString(1, String.valueOf(SID.getText()));
            int row = add.executeUpdate();
            Selectseller();
            JOptionPane.showMessageDialog(this, "Seller Berhasil Di Hapus");
         } catch (Exception e) {
           e.printStackTrace();
         }
      }
    }//GEN-LAST:event_SellerDeleteActionPerformed

    private void SellerClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SellerClearActionPerformed
        // TODO add your handling code here:
        SID.setText("");
        SNama.setText("");
        SPass.setText("");
        SGender.setSelectedItem("");
        SID.setEditable(true);
    }//GEN-LAST:event_SellerClearActionPerformed

    private void LogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogActionPerformed
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogActionPerformed

    private void Log1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Log1ActionPerformed
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_Log1ActionPerformed

    private void SellerTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellerTabelMouseClicked
      DefaultTableModel model = (DefaultTableModel)SellerTabel.getModel();
      int Myindex = SellerTabel.getSelectedRow();
      SID.setText(model.getValueAt(Myindex, 0).toString());
      SNama.setText(model.getValueAt(Myindex, 1).toString());
      SPass.setText(model.getValueAt(Myindex, 2).toString());
      SGender.setSelectedItem(model.getValueAt(Myindex, 3).toString());
    }//GEN-LAST:event_SellerTabelMouseClicked

    private void Log2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Log2ActionPerformed
        // TODO add your handling code here:
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_Log2ActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        // TODO add your handling code here:
        if(bAdd.getText().equals("+")){
           bAdd.setText("-");
           hidee();
        }else{
            bAdd.setText("+");
            hidee();
        }
        
       
     
    }//GEN-LAST:event_bAddActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
         if(!JAddcat.getText().isEmpty()){
                 try {        
             PreparedStatement add = conn.con.prepareStatement("insert into kategori values ('"+JAddcat.getText()+"')");
             int row = add.executeUpdate();
             SelectCat();
         } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Berhasil tambah kategori");
         }
            }
            else{
                 JOptionPane.showMessageDialog(this, "Kategori Gagal Di Tambahkan");
                 }
            JAddcat.setText("");
    }//GEN-LAST:event_addActionPerformed

    private void ad2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ad2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ad2MouseClicked

    private void ad2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ad2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ad2MousePressed

    private void ad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ad2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ad2ActionPerformed

    private void DelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelActionPerformed
        // TODO add your handling code here:
         
            try {
            PreparedStatement add = conn.con.prepareStatement("Delete from kategori where Cat = ?");
            add.setString(1, String.valueOf(JAddcat.getText()));
            int row = add.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "kategori Berhasil Di Hapus");
            Cat.setSelectedItem("");
            SelectCat();
         } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "kategori Gagal Di Hapus");
         }
           
           JAddcat.setText("");
    }//GEN-LAST:event_DelActionPerformed

    private void CatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatActionPerformed
        // TODO add your handling code here:
        JAddcat.setText(Cat.getSelectedItem().toString());
    }//GEN-LAST:event_CatActionPerformed

    private void FilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FilterKeyReleased
        // TODO add your handling code here:
        String query = Filter.getText();
        filter(query);
    }//GEN-LAST:event_FilterKeyReleased
public static boolean isNumeric(String str){
        return str.matches("-?\\d+(\\.\\d+)?");
    }
    private void filter(String query) {
        //Table row sorter for filter
        DefaultTableModel dm = (DefaultTableModel) ProdTabel.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        ProdTabel.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(query));
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JComboBox<String> Cat;
    private javax.swing.JButton Del;
    private javax.swing.JButton Edit;
    private javax.swing.JTextField Filter;
    private javax.swing.JButton Hapus;
    private javax.swing.JTextField Harga;
    private javax.swing.JTable History;
    private javax.swing.JTextField IdProd;
    private javax.swing.JTextField JAddcat;
    private javax.swing.JTextField Jtotal;
    private javax.swing.JButton Log;
    private javax.swing.JButton Log1;
    private javax.swing.JButton Log2;
    private javax.swing.JTextField ProdNama;
    private javax.swing.JTable ProdTabel;
    private javax.swing.JComboBox<String> SGender;
    private javax.swing.JTextField SID;
    private javax.swing.JTextField SNama;
    private javax.swing.JTextField SPass;
    private javax.swing.JButton SellerAdd;
    private javax.swing.JButton SellerClear;
    private javax.swing.JButton SellerDelete;
    private javax.swing.JTable SellerTabel;
    private javax.swing.JButton SellerUpdate;
    private javax.swing.JTextField Stok;
    private javax.swing.JButton Tambah;
    private javax.swing.JButton ad2;
    private javax.swing.JButton add;
    private javax.swing.JButton bAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
